# Generated by Django 4.2.7 on 2025-09-24 15:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("description", models.TextField()),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        help_text="Latitude in decimal degrees",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=7,
                        help_text="Longitude in decimal degrees",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "area_hectares",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0.1)]
                    ),
                ),
                (
                    "commodity_focus",
                    models.JSONField(
                        default=list,
                        help_text="List of commodities being explored (e.g., ['gold', 'copper'])",
                    ),
                ),
                ("geological_setting", models.TextField(blank=True)),
                ("access_road", models.BooleanField(default=False)),
                ("power_available", models.BooleanField(default=False)),
                (
                    "exploration_stage",
                    models.CharField(
                        choices=[
                            ("grassroots", "Grassroots"),
                            ("early", "Early Stage"),
                            ("advanced", "Advanced"),
                            ("resource", "Resource Definition"),
                            ("feasibility", "Feasibility"),
                            ("development", "Development"),
                            ("production", "Production"),
                        ],
                        default="grassroots",
                        max_length=20,
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Properties",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="DrillHole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hole_id", models.CharField(max_length=50)),
                ("latitude", models.DecimalField(decimal_places=7, max_digits=10)),
                ("longitude", models.DecimalField(decimal_places=7, max_digits=10)),
                (
                    "elevation",
                    models.FloatField(help_text="Elevation in meters above sea level"),
                ),
                (
                    "total_depth",
                    models.FloatField(
                        help_text="Total depth in meters",
                        validators=[django.core.validators.MinValueValidator(0.1)],
                    ),
                ),
                (
                    "azimuth",
                    models.FloatField(
                        help_text="Azimuth in degrees (0-360)",
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(360),
                        ],
                    ),
                ),
                (
                    "dip",
                    models.FloatField(
                        help_text="Dip in degrees (-90 to +90, negative = upward)",
                        validators=[
                            django.core.validators.MinValueValidator(-90),
                            django.core.validators.MaxValueValidator(90),
                        ],
                    ),
                ),
                ("drilling_date", models.DateField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "geo_property",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="drill_holes",
                        to="geological_data.property",
                    ),
                ),
            ],
            options={
                "ordering": ["geo_property", "hole_id"],
                "unique_together": {("geo_property", "hole_id")},
            },
        ),
        migrations.CreateModel(
            name="DrillSample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "from_depth",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "to_depth",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "gold_grade",
                    models.FloatField(
                        blank=True,
                        help_text="Gold grade in g/t",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "silver_grade",
                    models.FloatField(
                        blank=True,
                        help_text="Silver grade in g/t",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "copper_grade",
                    models.FloatField(
                        blank=True,
                        help_text="Copper grade in %",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "rock_type",
                    models.CharField(
                        choices=[
                            ("igneous", "Igneous"),
                            ("sedimentary", "Sedimentary"),
                            ("metamorphic", "Metamorphic"),
                            ("volcanic", "Volcanic"),
                            ("intrusive", "Intrusive"),
                            ("other", "Other"),
                        ],
                        default="other",
                        max_length=20,
                    ),
                ),
                ("alteration", models.CharField(blank=True, max_length=200)),
                ("mineralization", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "drill_hole",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="samples",
                        to="geological_data.drillhole",
                    ),
                ),
            ],
            options={
                "ordering": ["drill_hole", "from_depth"],
                "unique_together": {("drill_hole", "from_depth", "to_depth")},
            },
        ),
    ]
