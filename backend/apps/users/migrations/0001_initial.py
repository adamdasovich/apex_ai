# Generated by Django 4.2.7 on 2025-09-22 17:05

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MiningUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("investor", "Investor"),
                            ("geologist", "Geologist"),
                            ("community", "Community Member"),
                            ("student", "Student/Academic"),
                        ],
                        default="community",
                        max_length=20,
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True,
                        help_text="Tell us about your background in mining/geology",
                        max_length=500,
                    ),
                ),
                ("company", models.CharField(blank=True, max_length=200)),
                ("job_title", models.CharField(blank=True, max_length=100)),
                (
                    "location",
                    models.CharField(
                        blank=True,
                        help_text="City, State/Province, Country",
                        max_length=200,
                    ),
                ),
                (
                    "interests",
                    models.JSONField(
                        default=list, help_text="Select your areas of interest"
                    ),
                ),
                ("profile_completed", models.BooleanField(default=False)),
                ("email_verified", models.BooleanField(default=False)),
                ("last_active", models.DateTimeField(auto_now=True)),
                (
                    "profile_public",
                    models.BooleanField(
                        default=True,
                        help_text="Make your profile visible to other users",
                    ),
                ),
                (
                    "show_location",
                    models.BooleanField(
                        default=True, help_text="Show your location on your profile"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Mining User",
                "verbose_name_plural": "Mining Users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "years_experience",
                    models.IntegerField(
                        blank=True,
                        help_text="Years of experience in mining/geology",
                        null=True,
                    ),
                ),
                (
                    "education_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("high_school", "High School"),
                            ("bachelor", "Bachelor's Degree"),
                            ("master", "Master's Degree"),
                            ("phd", "PhD"),
                            ("professional", "Professional Certification"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "certifications",
                    models.TextField(
                        blank=True, help_text="Professional certifications or licenses"
                    ),
                ),
                ("linkedin_url", models.URLField(blank=True)),
                ("website_url", models.URLField(blank=True)),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True,
                        help_text="Receive email notifications about platform updates",
                    ),
                ),
                (
                    "weekly_digest",
                    models.BooleanField(
                        default=False,
                        help_text="Receive weekly digest of platform activity",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
